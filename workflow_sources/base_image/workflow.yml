#@ load("@ytt:data", "data")

#@ def to_build_args(d):
#@   return ",".join(['{0}={1}'.format(k,d[k]) for k in d.keys()])
#@ end

---
name: Workflow Base Images
#! https://github.com/k14s/ytt/issues/189
a_magic_string_that_we_will_sed_to_on: [workflow_dispatch]
jobs:
  ci-base:
    name: ci-base
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        erlang_version: #@ data.values.erlang_versions
      fail-fast: false
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      - name: CREATE ERLANG+ELIXIR IMAGE (${{ matrix.erlang_version }})
        uses: docker/build-push-action@v1
        with:
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}
          registry: eu.gcr.io
          repository: cf-rabbitmq-core/erlang_elixir
          dockerfile: ci/dockerfiles/${{ matrix.erlang_version }}/erlang_elixir
          tags: ${{ matrix.erlang_version }}
      - name: CREATE BASE CI IMAGE (${{ matrix.erlang_version }})
        uses: docker/build-push-action@v1
        with:
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}
          registry: eu.gcr.io
          repository: cf-rabbitmq-core/ci-base
          dockerfile: ci/dockerfiles/ci-base
          #@ build_args = {}
          #@ build_args["ERLANG_VERSION"] = "${{ matrix.erlang_version }}"
          #@ build_args["SECONDARY_UMBRELLA_GITREFS"] = ' '.join(data.values.secondary_umbrella_gitrefs)
          build_args: #@ to_build_args(build_args)
          tags: ${{ matrix.erlang_version }}
