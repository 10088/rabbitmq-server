#@ load("@ytt:data", "data")
#@ load("helpers.star", "ci_image", "skip_ci_condition")
#@ load("common.lib.yml", "docker_layer_caching_step")

#@ def rabbitmq_cli_job(dep, erlang_version=None):
name: #@ dep.name
needs:
  - prepare
runs-on: ubuntu-18.04
if: #@ skip_ci_condition()
#@yaml/text-templated-strings
steps:
  - name: RECORD STEP START
    id: buildevents
    run: |
      echo "::set-output name=step_start::$(date +%s)"
  - #@ docker_layer_caching_step()
  - name: Login to GCR
    uses: docker/login-action@v1
    with:
      registry: eu.gcr.io
      username: _json_key
      password: ${{ secrets.GCR_JSON_KEY }}
  - name: RUN TESTS
    run: |
      docker pull (@= ci_image(erlang_version) @)
      mkdir broker-logs && chmod 777 broker-logs
      docker run \
        --env project=(@= dep.name @) \
        --env GITHUB_RUN_ID=${{ github.run_id }} \
        --env BUILDEVENT_APIKEY=${{ secrets.HONEYCOMB_API_KEY }} \
        --env STEP_START=${{ steps.buildevents.outputs.step_start }} \
        --volume ${PWD}/broker-logs:/workspace/broker-logs \
        (@= ci_image(erlang_version) @) \
        ci/scripts/rabbitmq_cli.sh
  - name: ON FAILURE UPLOAD TESTS LOGS ARTIFACT
    #! https://github.com/marketplace/actions/upload-artifact
    uses: actions/upload-artifact@v2-preview
    if: failure()
    with:
      name: (@= dep.name @)-broker-logs
      path: "broker-logs/broker-logs.tar.xz"
#@ end